//
// Utility classes
// --------------------------------------------------


// Floats
// -------------------------

.clearfix {
  @include clearfix();
}
.center-block {
  @include center-block();
}
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}


// Toggling content
// -------------------------

// Note: Deprecated .hide in favor of .hidden or .sr-only (as appropriate) in v3.0.1
.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  @include text-hide();
}


// Hide from screenreaders and browsers
//
// Credit: HTML5 Boilerplate

.hidden {
  display: none !important;
  visibility: hidden !important;
}


// For Affix plugin
// -------------------------

.affix {
  position: fixed;
}

// Positions
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

// Float
.float-left {
  float: left;
}

.float-right {
  float: right;
}

// Display
.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

// Margins
@for $h from -7 to 11 {
  .m-#{$h*7} {
    margin: em($h*7)!important;
  }
}

@for $i from -7 to 11 {
  .mt-#{$i*7} {
    margin-top: em($i*7)!important;
  }
}

@for $j from -7 to 11 {
  .mb-#{$j*7} {
    margin-bottom: em($j*7)!important;
  }
}

@for $k from -7 to 11 {
  .ml-#{$k*7} {
    margin-left: em($k*7)!important;
  }
}

@for $l from -7 to 11 {
  .mr-#{$l*7} {
    margin-right: em($l*7)!important;
  }
}

    // Paddings
@for $m from -7 to 11 {
  .pt-#{$m*7} {
    padding-top: em($m*7)!important;
  }
}

@for $n from -7 to 11 {
  .pb-#{$n*7} {
    padding-bottom: em($n*7)!important;
  }
}

@for $o from -7 to 11 {
  .pl-#{$o*7} {
    padding-left: em($o*7)!important;
  }
}

@for $p from -7 to 11 {
  .pr-#{$p*7} {
    padding-right: em($p*7)!important;
  }
}

@for $q from -7 to 11 {
  .p-#{$q*7} {
    padding: em($q*7)!important;
  }
}

// Min-Heights
@for $r from 1 to 13 {
  .mh-#{($r*7)*10} {
    min-height: em(($r*7)*10)!important;
  }
}

// Backgrounds
.bg-primary {
  background: $brand-primary;
}

.bg-primary-grad {
  @include linear-gradient(to bottom, $brand-primary, darken($brand-primary, 5));
}

.bg-white {
  background: white!important;
}

.bg-white-grad {
  @include linear-gradient(to bottom, white, darken(white, 5));
}

.bg-info {
  background: $brand-info;
}

.bg-info-grad {
  @include linear-gradient(to bottom, $brand-info, darken($brand-info, 5));
}

.bg-success {
  background: $brand-success;
}

.bg-success-grad {
  @include linear-gradient(to bottom, $brand-success, darken($brand-success, 5));
}

.bg-danger {
  background: $brand-danger;
}

.bg-danger-grad {
  @include linear-gradient(to bottom, $brand-danger, darken($brand-danger, 5));
}

.bg-warning {
  background: $brand-warning;
}

.bg-warning-grad {
  @include linear-gradient(to bottom, $brand-warning, darken($brand-warning, 5));
}

.bg-gray-lighter {
  background: $gray-lighter;
}

.bg-inverse {
  background: $gray-darker;
}

.bg-inverse-grad {
  @include linear-gradient(to bottom, $gray-darker, darken($gray-darker, 5));
}

// Borders
.border-rounded {
  border-radius: $border-radius-base;
}

.border-rounded-1 {
  border-radius: 1px;
}

.border-color-primary {
  border: 1px solid $brand-primary;
}

.border-color-gray {
  border: 2px solid $gray-lighter;
}

.border-color-info {
  border: 1px solid $brand-info;
}

.border-color-success {
  border: 2px solid $brand-success;
}

.borderless {
  border: none;
}

// Box Shadows
.box-shadow {
  @include box-shadow(0 3px 3px 0 rgba(0,0,0,0.15));
}

// Z-Index
@for $z from 1 to 4 {
  .z-index#{($z)*10} {
    z-index: ($z)*10!important;
  }
}